<div class="profile-container"
    data-is-creator-viewing="<%= currentUser && currentUser._id.toString() === user._id.toString() %>"
    data-is-subscribed="<%= isSubscribed %>"
>
  <div class="profile-header">
    <div class="cover-photo-container">
      <% if (user.coverPhoto) { %>
        <img class="cover-photo" src="<%= user.coverPhoto %>" alt="Cover Photo">
      <% } else { %>
        <img class="cover-photo" src="/uploads/default-cover.jpg" alt="Default Cover Photo">
      <% } %>

      <div class="cover-stats">
        <div class="stat-item">
          <i class="fa fa-image"></i>
          <div class="stat-count"><%= user.imagesCount || 0 %></div>
          <div class="stat-label">Photos</div>
        </div>
        <div class="stat-item">
          <i class="fa fa-video"></i>
          <div class="stat-count"><%= user.videosCount || 0 %></div>
          <div class="stat-label">Videos</div>
        </div>
        <div class="stat-item">
          <i class="fa fa-heart"></i>
          <div class="stat-count"><%= user.totalLikes || 0 %></div>
          <div class="stat-label">Likes</div>
        </div>
        <% if (user.role === 'creator') { %>
          <div class="stat-item">
            <i class="fa fa-users"></i>
            <div class="stat-count"><%= user.subscriberCount || 0 %></div>
            <div class="stat-label">Subscribers</div>
          </div>
        <% } %>
      </div>
    </div>

    <!-- Profile Actions (Chat, Tip, Broadcast Icons) -->
    <div class="profile-actions">
      <% if (currentUser && currentUser._id.toString() === user._id.toString() && user.role === 'creator') { %>
        <!-- Creator View: Chat and Broadcast -->
        <a href="/chat" class="action-button chat-icon" title="Chat with Subscribers">
          <i class="fa fa-comment"></i>
        </a>
        <a href="/broadcast" class="action-button broadcast-icon" title="Start Broadcast">
          <i class="fa fa-video"></i>
        </a>
      <% } else if (currentUser && isSubscribed && user.role === 'creator') { %>
        <!-- Visitor View (Subscribed): Chat and Tip -->
        <a href="/chat?creatorId=<%= user._id %>" class="action-button chat-icon" title="Chat with <%= user.username %>">
          <i class="fa fa-comment"></i>
        </a>
        <button class="action-button tip-icon tip-profile-button" data-creator-id="<%= user._id %>" title="Tip <%= user.username %>">
          <i class="fa fa-gift"></i>
        </button>
      <% } %>
    </div>

    <div class="profile-details">
      <img class="profile-picture" src="<%= user.profilePicture ? user.profilePicture : '/uploads/default-profile-picture.jpg' %>" alt="Profile Picture">
      <div class="profile-names">
        <h1 class="profile-name">
          <%= user.profileName %>
          <% if (user.role === 'creator') { %>
            <span class="verified-badge"><i class="fa fa-check-circle"></i></span>
          <% } %>
        </h1>
        <p class="username">@<%= user.username %></p>
      </div>

      <% if (user.bio) { %>
        <div class="profile-bio">
          <p class="bio"><%= user.bio %></p>
        </div>
      <% } %>

      <% if (user.role === 'creator') { %>
        <div class="subscription-section">
          <%# --- Toggle Buttons --- %>
          <% if (currentUser && currentUser._id.toString() !== user._id.toString()) { %>
            <%# Visitor View %>
            <% if (isSubscribed) { %>
              <div class="subscription-actions">
                <form action="/profile/unsubscribe/<%= user._id %>" method="POST" style="display: inline;">
                  <button type="submit" class="unsubscribe-btn">Subscribed</button>
                </form>
                <% if (bundles && bundles.length > 0) { %>
                  <button class="view-bundles-button" id="toggleBundlesBtn">View Options</button>
                <% } %>
              </div>
            <% } else { %>
              <%# Not Subscribed Visitor %>
              <% if (bundles && bundles.length > 0) { %>
                <button class="subscribe-now-button" id="toggleBundlesBtn">
                  SUBSCRIBE NOW
                </button>
              <% } else { %>
                <p class="no-bundles-message">No subscription options currently available.</p>
              <% } %>
            <% } %>
          <% } else if (currentUser && currentUser._id.toString() === user._id.toString() && user.role === 'creator') { %>
            <%# Creator's Own View %>
            <% if (bundles && bundles.length > 0) { %>
              <button class="manage-bundles-button" id="toggleBundlesBtn">
                Manage Bundles (<%= bundles.length %>)
              </button>
            <% } %>
          <% } %>

          <%# --- Bundle Dropdown --- %>
          <% if (bundles && bundles.length > 0) { %>
            <div class="subscription-dropdown hidden" id="subscriptionDropdown">
              <ul class="bundle-list">
                <% bundles.forEach(bundle => { %>
                  <li class="bundle-item">
                    <% if (currentUser && currentUser._id.toString() !== user._id.toString() && !isSubscribed) { %>
                      <form action="/profile/subscribe" method="POST" class="subscribe-bundle-form">
                        <input type="hidden" name="creatorId" value="<%= user._id %>">
                        <input type="hidden" name="bundleId" value="<%= bundle._id %>">
                        <button type="submit" class="bundle-subscribe-button">
                          <span class="bundle-duration"><%= bundle.duration %></span>
                          <span class="bundle-price">₦<%= bundle.price %></span>
                        </button>
                      </form>
                    <% } else { %>
                      <div class="bundle-info-block">
                        <span class="bundle-duration"><%= bundle.duration %></span>
                        <span class="bundle-price">₦<%= bundle.price %></span>
                      </div>
                      <% if (currentUser && currentUser._id.toString() === user._id.toString()) { %>
                        <form action="/profile/delete-bundle/<%= bundle._id %>" method="POST" onsubmit="return confirm('Are you sure you want to delete this bundle?');" class="delete-bundle-form">
                          <button type="submit" class="delete-bundle-button">Delete</button>
                        </form>
                      <% } %>
                    <% } %>
                  </li>
                <% }) %>
              </ul>
            </div>
          <% } %>
        </div>
      <% } %>
    </div>
  </div>

  <% if (currentUser && currentUser.role === 'admin') { %>
    <a class="admin-dashboard-link" href="/admin">Admin Dashboard</a>
  <% } %>

  <!-- Tabbed Content -->
  <div class="profile-tabs">
    <button class="tab-button active" data-tab="posts">Posts <span class="tab-count"><%= posts.length %></span></button>
    <button class="tab-button" data-tab="media">Media <span class="tab-count"><%= (user.imagesCount || 0) + (user.videosCount || 0) %></span></button>
  </div>

  <!-- Posts Tab -->
  <div class="tab-content" id="posts-tab">
    <% if (currentUser && currentUser._id.toString() === user._id.toString()) { %>
      <!-- Creator View -->
      <% if (posts && posts.length > 0) { %>
        <div class="posts-list">
          <% posts.forEach(post => { %>
            <div class="post-card" id="post-<%= post._id %>">
              <div class="post-content">
                <% if (post.type === 'image') { %>
                  <img src="<%= post.contentUrl %>" alt="Post Image" class="post-image fullscreenable" data-fullscreen-src="<%= post.contentUrl %>">
                <% } else if (post.type === 'video') { %>
                  <video controls class="post-video">
                    <source src="<%= post.contentUrl %>" type="<%= post.contentType || 'video/mp4' %>">
                    Your browser does not support the video tag.
                  </video>
                <% } else if (post.type === 'text') { %>
                  <p class="post-text"><%= post.writeUp %></p>
                <% } %>
                <% if (post.writeUp && post.type !== 'text') { %>
                  <p class="post-writeUp"><%= post.writeUp %></p>
                <% } %>
              </div>
              <% if (post.special) { %>
                <p class="special-indicator">Special Content - Unlock Price: ₦<%= post.unlockPrice %></p>
              <% } %>
              <div class="post-actions">
                <button class="like-button" data-post-id="<%= post._id %>">
                  <i class="fa-solid fa-heart"></i>
                  <span class="like-count"><%= post.likes ? post.likes.length : 0 %></span>
                </button>
                <button class="comment-icon" data-post-id="<%= post._id %>">
                  <i class="fa-solid fa-comment"></i>
                  <span class="comment-count"><%= post.comments ? post.comments.length : 0 %></span>
                </button>
                <button class="tip-button" data-post-id="<%= post._id %>" data-creator-id="<%= user._id %>">
                  <i class="fa-solid fa-gift"></i>
                  Tip (<span class="tip-count"><%= post.tipCount || 0 %></span>)
                </button>
              </div>
              <div class="comments">
                <% if (post.comments && post.comments.length > 0) { %>
                  <% post.comments.slice(0, 2).forEach(comment => { %>
                    <div class="comment">
                      <strong><%= comment.user.username %>:</strong> <%= comment.text %>
                    </div>
                  <% }); %>
                  <% if (post.comments.length > 2) { %>
                    <a href="#" class="view-all-comments">View all <%= post.comments.length %> comments</a>
                  <% } %>
                <% } %>
              </div>
              <div class="comment-form-container hidden">
                <form class="comment-form" data-post-id="<%= post._id %>">
                  <input type="text" name="comment" placeholder="Write a comment...">
                  <button type="submit">Post</button>
                </form>
              </div>
              <form action="/profile/delete-post/<%= post._id %>" method="POST" onsubmit="return confirm('Are you sure you want to delete this post?');" class="delete-post-form">
                <button type="submit" class="delete-post-btn">Delete Post</button>
              </form>
            </div>
          <% }); %>
        </div>
      <% } else { %>
        <p class="no-posts-message">You have not uploaded any posts yet.</p>
      <% } %>
    <% } else { %>
      <!-- Visitor View -->
      <% if (isSubscribed) { %>
        <% if (posts && posts.length > 0) { %>
          <div class="posts-list">
            <% posts.forEach(post => { %>
              <div class="post-card" id="post-<%= post._id %>">
                <% let showLocked = post.special && !(currentUser.purchasedContent && currentUser.purchasedContent.some(p => p.contentId.toString() === post._id.toString())); %>
                <% if (showLocked) { %>
                  <div class="locked-content-container">
                    <% if (post.type === 'image' || post.type === 'video') { %>
                      <img src="/uploads/locked-placeholder.png" alt="Locked Content" class="post-image post-locked-placeholder">
                    <% } %>
                    <% if (post.writeUp) { %>
                      <p class="post-writeUp preview-text"><%= post.writeUp.substring(0, 100) %><% if (post.writeUp.length > 100) { %>...<% } %></p>
                    <% } %>
                    <div class="unlock-overlay">
                      <i class="fa fa-lock"></i>
                      <div>Unlock for ₦<%= post.unlockPrice %></div>
                      <button class="unlock-button" data-content-id="<%= post._id %>" data-creator-id="<%= user._id %>">Unlock Post</button>
                    </div>
                  </div>
                <% } else { %>
                  <div class="post-content">
                    <% if (post.type === 'image') { %>
                      <img src="<%= post.contentUrl %>" alt="Post Image" class="post-image fullscreenable" data-fullscreen-src="<%= post.contentUrl %>">
                    <% } else if (post.type === 'video') { %>
                      <video controls class="post-video">
                        <source src="<%= post.contentUrl %>" type="<%= post.contentType || 'video/mp4' %>">
                        Your browser does not support the video tag.
                      </video>
                    <% } else if (post.type === 'text') { %>
                      <p class="post-text"><%= post.writeUp %></p>
                    <% } %>
                    <% if (post.writeUp && post.type !== 'text') { %>
                      <p class="post-writeUp"><%= post.writeUp %></p>
                    <% } %>
                  </div>
                <% } %>
                <div class="post-actions">
                  <button class="like-button" data-post-id="<%= post._id %>">
                    <i class="fa-solid fa-heart"></i>
                    <span class="like-count"><%= post.likes ? post.likes.length : 0 %></span>
                  </button>
                  <button class="comment-icon" data-post-id="<%= post._id %>">
                    <i class="fa-solid fa-comment"></i>
                    <span class="comment-count"><%= post.comments ? post.comments.length : 0 %></span>
                  </button>
                  <button class="tip-button" data-post-id="<%= post._id %>" data-creator-id="<%= user._id %>">
                    <i class="fa-solid fa-gift"></i>
                    Tip (<span class="tip-count"><%= post.tipCount || 0 %></span>)
                  </button>
                </div>
                <div class="comments">
                  <% if (post.comments && post.comments.length > 0) { %>
                    <% post.comments.slice(0, 2).forEach(comment => { %>
                      <div class="comment">
                        <strong><%= comment.user.username %>:</strong> <%= comment.text %>
                      </div>
                    <% }); %>
                    <% if (post.comments.length > 2) { %>
                      <a href="#" class="view-all-comments">View all <%= post.comments.length %> comments</a>
                    <% } %>
                  <% } %>
                </div>
                <div class="comment-form-container hidden">
                  <form class="comment-form" data-post-id="<%= post._id %>">
                    <input type="text" name="comment" placeholder="Write a comment...">
                    <button type="submit">Post</button>
                  </form>
                </div>
              </div>
            <% }); %>
          </div>
        <% } else { %>
          <p class="no-posts-message">This creator hasn't posted anything yet.</p>
        <% } %>
      <% } else { %>
        <p class="subscribe-prompt">Subscribe to see posts from <%= user.username %>.</p>
      <% } %>
    <% } %>
  </div>

  <!-- Media Tab -->
  <div class="tab-content hidden" id="media-tab">
    <div class="media-subtabs">
      <button class="subtab-button active" data-subtab="all">All <span class="tab-count"><%= (user.imagesCount || 0) + (user.videosCount || 0) %></span></button>
      <button class="subtab-button" data-subtab="pics">Pics <span class="tab-count"><%= user.imagesCount || 0 %></span></button>
      <button class="subtab-button" data-subtab="videos">Videos <span class="tab-count"><%= user.videosCount || 0 %></span></button>
      <button class="view-toggle-button" title="Toggle Compact View"><i class="fa fa-th"></i></button>
    </div>

    <!-- All Media -->
    <div class="media-view active" id="media-all">
      <% if (isSubscribed || (currentUser && currentUser._id.toString() === user._id.toString())) { %>
        <% if (posts && posts.some(post => post.type === 'image' || post.type === 'video')) { %>
          <div class="media-content posts-list">
            <% posts.filter(post => post.type === 'image' || post.type === 'video').forEach(post => { %>
              <div class="media-item" id="media-post-<%= post._id %>">
                <% let showLocked = post.special && !(currentUser && currentUser.purchasedContent && currentUser.purchasedContent.some(p => p.contentId.toString() === post._id.toString())); %>
                <% if (showLocked) { %>
                  <div class="locked-content-container">
                    <img src="/uploads/locked-placeholder.png" alt="Locked Content" class="post-image post-locked-placeholder">
                    <div class="unlock-overlay">
                      <i class="fa fa-lock"></i>
                      <div>Unlock for ₦<%= post.unlockPrice %></div>
                      <button class="unlock-button" data-content-id="<%= post._id %>" data-creator-id="<%= user._id %>">Unlock</button>
                    </div>
                  </div>
                <% } else { %>
                  <% if (post.type === 'image') { %>
                    <img src="<%= post.contentUrl %>" alt="Post Image" class="post-image fullscreenable" data-fullscreen-src="<%= post.contentUrl %>">
                  <% } else if (post.type === 'video') { %>
                    <video controls class="post-video">
                      <source src="<%= post.contentUrl %>" type="<%= post.contentType || 'video/mp4' %>">
                      Your browser does not support the video tag.
                    </video>
                  <% } %>
                <% } %>
                <!-- Normal View Content -->
                <div class="normal-view-content">
                  <% if (!showLocked && post.writeUp) { %>
                    <p class="post-writeUp"><%= post.writeUp %></p>
                  <% } %>
                  <% if (post.special) { %>
                    <p class="special-indicator">Special Content - Unlock Price: ₦<%= post.unlockPrice %></p>
                  <% } %>
                  <div class="post-actions">
                    <button class="like-button" data-post-id="<%= post._id %>">
                      <i class="fa-solid fa-heart"></i>
                      <span class="like-count"><%= post.likes ? post.likes.length : 0 %></span>
                    </button>
                    <button class="comment-icon" data-post-id="<%= post._id %>">
                      <i class="fa-solid fa-comment"></i>
                      <span class="comment-count"><%= post.comments ? post.comments.length : 0 %></span>
                    </button>
                    <button class="tip-button" data-post-id="<%= post._id %>" data-creator-id="<%= user._id %>">
                      <i class="fa-solid fa-gift"></i>
                      Tip (<span class="tip-count"><%= post.tipCount || 0 %></span>)
                    </button>
                  </div>
                  <div class="comments">
                    <% if (post.comments && post.comments.length > 0) { %>
                      <% post.comments.slice(0, 2).forEach(comment => { %>
                        <div class="comment">
                          <strong><%= comment.user.username %>:</strong> <%= comment.text %>
                        </div>
                      <% }); %>
                      <% if (post.comments.length > 2) { %>
                        <a href="#" class="view-all-comments">View all <%= post.comments.length %> comments</a>
                      <% } %>
                    <% } %>
                  </div>
                  <div class="comment-form-container hidden">
                    <form class="comment-form" data-post-id="<%= post._id %>">
                      <input type="text" name="comment" placeholder="Write a comment...">
                      <button type="submit">Post</button>
                    </form>
                  </div>
                  <% if (currentUser && currentUser._id.toString() === user._id.toString()) { %>
                    <form action="/profile/delete-post/<%= post._id %>" method="POST" onsubmit="return confirm('Are you sure you want to delete this post?');" class="delete-post-form">
                      <button type="submit" class="delete-post-btn">Delete Post</button>
                    </form>
                  <% } %>
                </div>
              </div>
            <% }); %>
          </div>
        <% } else { %>
          <p class="no-media-message">No media available yet.</p>
        <% } %>
      <% } else { %>
        <p class="subscribe-prompt">Subscribe to see media from <%= user.username %>.</p>
      <% } %>
    </div>

    <!-- Pictures -->
    <div class="media-view" id="media-pics">
      <% if (isSubscribed || (currentUser && currentUser._id.toString() === user._id.toString())) { %>
        <% if (posts && posts.some(post => post.type === 'image')) { %>
          <div class="media-content posts-list">
            <% posts.filter(post => post.type === 'image').forEach(post => { %>
              <div class="media-item" id="media-post-<%= post._id %>">
                <% let showLocked = post.special && !(currentUser && currentUser.purchasedContent && currentUser.purchasedContent.some(p => p.contentId.toString() === post._id.toString())); %>
                <% if (showLocked) { %>
                  <div class="locked-content-container">
                    <img src="/uploads/locked-placeholder.png" alt="Locked Content" class="post-image post-locked-placeholder">
                    <div class="unlock-overlay">
                      <i class="fa fa-lock"></i>
                      <div>Unlock for ₦<%= post.unlockPrice %></div>
                      <button class="unlock-button" data-content-id="<%= post._id %>" data-creator-id="<%= user._id %>">Unlock</button>
                    </div>
                  </div>
                <% } else { %>
                  <img src="<%= post.contentUrl %>" alt="Post Image" class="post-image fullscreenable" data-fullscreen-src="<%= post.contentUrl %>">
                <% } %>
                <!-- Normal View Content -->
                <div class="normal-view-content">
                  <% if (!showLocked && post.writeUp) { %>
                    <p class="post-writeUp"><%= post.writeUp %></p>
                  <% } %>
                  <% if (post.special) { %>
                    <p class="special-indicator">Special Content - Unlock Price: ₦<%= post.unlockPrice %></p>
                  <% } %>
                  <div class="post-actions">
                    <button class="like-button" data-post-id="<%= post._id %>">
                      <i class="fa-solid fa-heart"></i>
                      <span class="like-count"><%= post.likes ? post.likes.length : 0 %></span>
                    </button>
                    <button class="comment-icon" data-post-id="<%= post._id %>">
                      <i class="fa-solid fa-comment"></i>
                      <span class="comment-count"><%= post.comments ? post.comments.length : 0 %></span>
                    </button>
                    <button class="tip-button" data-post-id="<%= post._id %>" data-creator-id="<%= user._id %>">
                      <i class="fa-solid fa-gift"></i>
                      Tip (<span class="tip-count"><%= post.tipCount || 0 %></span>)
                    </button>
                  </div>
                  <div class="comments">
                    <% if (post.comments && post.comments.length > 0) { %>
                      <% post.comments.slice(0, 2).forEach(comment => { %>
                        <div class="comment">
                          <strong><%= comment.user.username %>:</strong> <%= comment.text %>
                        </div>
                      <% }); %>
                      <% if (post.comments.length > 2) { %>
                        <a href="#" class="view-all-comments">View all <%= post.comments.length %> comments</a>
                      <% } %>
                    <% } %>
                  </div>
                  <div class="comment-form-container hidden">
                    <form class="comment-form" data-post-id="<%= post._id %>">
                      <input type="text" name="comment" placeholder="Write a comment...">
                      <button type="submit">Post</button>
                    </form>
                  </div>
                  <% if (currentUser && currentUser._id.toString() === user._id.toString()) { %>
                    <form action="/profile/delete-post/<%= post._id %>" method="POST" onsubmit="return confirm('Are you sure you want to delete this post?');" class="delete-post-form">
                      <button type="submit" class="delete-post-btn">Delete Post</button>
                    </form>
                  <% } %>
                </div>
              </div>
            <% }); %>
          </div>
        <% } else { %>
          <p class="no-media-message">No pictures available yet.</p>
        <% } %>
      <% } else { %>
        <p class="subscribe-prompt">Subscribe to see pictures from <%= user.username %>.</p>
      <% } %>
    </div>

    <!-- Videos -->
    <div class="media-view" id="media-videos">
      <% if (isSubscribed || (currentUser && currentUser._id.toString() === user._id.toString())) { %>
        <% if (posts && posts.some(post => post.type === 'video')) { %>
          <div class="media-content posts-list">
            <% posts.filter(post => post.type === 'video').forEach(post => { %>
              <div class="media-item" id="media-post-<%= post._id %>">
                <% let showLocked = post.special && !(currentUser && currentUser.purchasedContent && currentUser.purchasedContent.some(p => p.contentId.toString() === post._id.toString())); %>
                <% if (showLocked) { %>
                  <div class="locked-content-container">
                    <img src="/uploads/locked-placeholder.png" alt="Locked Content" class="post-image post-locked-placeholder">
                    <div class="unlock-overlay">
                      <i class="fa fa-lock"></i>
                      <div>Unlock for ₦<%= post.unlockPrice %></div>
                      <button class="unlock-button" data-content-id="<%= post._id %>" data-creator-id="<%= user._id %>">Unlock</button>
                    </div>
                  </div>
                <% } else { %>
                  <video controls class="post-video">
                    <source src="<%= post.contentUrl %>" type="<%= post.contentType || 'video/mp4' %>">
                    Your browser does not support the video tag.
                  </video>
                <% } %>
                <!-- Normal View Content -->
                <div class="normal-view-content">
                  <% if (!showLocked && post.writeUp) { %>
                    <p class="post-writeUp"><%= post.writeUp %></p>
                  <% } %>
                  <% if (post.special) { %>
                    <p class="special-indicator">Special Content - Unlock Price: ₦<%= post.unlockPrice %></p>
                  <% } %>
                  <div class="post-actions">
                    <button class="like-button" data-post-id="<%= post._id %>">
                      <i class="fa-solid fa-heart"></i>
                      <span class="like-count"><%= post.likes ? post.likes.length : 0 %></span>
                    </button>
                    <button class="comment-icon" data-post-id="<%= post._id %>">
                      <i class="fa-solid fa-comment"></i>
                      <span class="comment-count"><%= post.comments ? post.comments.length : 0 %></span>
                    </button>
                    <button class="tip-button" data-post-id="<%= post._id %>" data-creator-id="<%= user._id %>">
                      <i class="fa-solid fa-gift"></i>
                      Tip (<span class="tip-count"><%= post.tipCount || 0 %></span>)
                    </button>
                  </div>
                  <div class="comments">
                    <% if (post.comments && post.comments.length > 0) { %>
                      <% post.comments.slice(0, 2).forEach(comment => { %>
                        <div class="comment">
                          <strong><%= comment.user.username %>:</strong> <%= comment.text %>
                        </div>
                      <% }); %>
                      <% if (post.comments.length > 2) { %>
                        <a href="#" class="view-all-comments">View all <%= post.comments.length %> comments</a>
                      <% } %>
                    <% } %>
                  </div>
                  <div class="comment-form-container hidden">
                    <form class="comment-form" data-post-id="<%= post._id %>">
                      <input type="text" name="comment" placeholder="Write a comment...">
                      <button type="submit">Post</button>
                    </form>
                  </div>
                  <% if (currentUser && currentUser._id.toString() === user._id.toString()) { %>
                    <form action="/profile/delete-post/<%= post._id %>" method="POST" onsubmit="return confirm('Are you sure you want to delete this post?');" class="delete-post-form">
                      <button type="submit" class="delete-post-btn">Delete Post</button>
                    </form>
                  <% } %>
                </div>
              </div>
            <% }); %>
          </div>
        <% } else { %>
          <p class="no-media-message">No videos available yet.</p>
        <% } %>
      <% } else { %>
        <p class="subscribe-prompt">Subscribe to see videos from <%= user.username %>.</p>
      <% } %>
    </div>
  </div>

  <!-- Fullscreen Overlay -->
  <div class="fullscreen-overlay" id="fullscreenOverlay">
    <img src="" alt="Fullscreen Image" id="fullscreenImage">
    <button class="close-fullscreen" id="closeFullscreen">×</button>
  </div>

  <!-- Creator Actions -->
  <% if (currentUser && currentUser._id.toString() === user._id.toString()) { %>
    <div class="creator-actions">
      <div class="edit-profile-container">
        <a href="/profile/edit" class="edit-profile-btn">Edit Profile</a>
      </div>

      <% if (user.role === 'creator') { %>
        <div class="create-bundle-form">
          <h4>Create Subscription Bundle</h4>
          <p>Limit: 4 bundles. Currently: <%= bundles ? bundles.length : 0 %></p>
          <% if (!bundles || bundles.length < 4) { %>
            <form action="/profile/create-bundle" method="POST">
              <div style="margin-bottom: 10px;">
                <label for="bundlePrice">Bundle Price (NGN):</label><br>
                <input type="number" name="price" id="bundlePrice" min="0" required class="form-input">
              </div>
              <div style="margin-bottom: 10px;">
                <label for="bundleDuration">Bundle Duration:</label><br>
                <select name="duration" id="bundleDuration" required class="form-select">
                  <option value="" disabled selected>-- Select Duration --</option>
                  <option value="1 day">1 day</option>
                  <option value="1 month">1 month</option>
                  <option value="3 months">3 months</option>
                  <option value="6 months">6 months</option>
                  <option value="1 year">1 year</option>
                </select>
              </div>
              <div style="margin-bottom: 10px;">
                <label for="bundleDescription">Bundle Description:</label><br>
                <textarea name="description" id="bundleDescription" required placeholder="e.g., Access all my content for 1 month" class="form-textarea"></textarea>
              </div>
              <button type="submit" class="form-button">Create Bundle</button>
            </form>
          <% } else { %>
            <p>You have reached the maximum limit of 4 bundles.</p>
          <% } %>
        </div>

        <div class="upload-content-form">
          <h3>Upload New Content</h3>
          <form action="/profile/uploadContent" method="POST" enctype="multipart/form-data">
            <div style="margin-bottom: 10px;">
              <label for="contentImage">Upload Image:</label><br>
              <input type="file" name="contentImage" id="contentImage" accept="image/*" class="form-input">
            </div>
            <div style="margin-bottom: 10px;">
              <label for="contentVideo">Upload Video:</label><br>
              <input type="file" name="contentVideo" id="contentVideo" accept="video/*" class="form-input">
            </div>
            <div style="margin-bottom: 10px;">
              <label for="writeUp">Write-up / Caption:</label><br>
              <textarea name="writeUp" id="writeUp" class="form-textarea"></textarea>
            </div>
            <div style="margin-bottom: 10px;">
              <label for="specialCheckbox">
                <input type="checkbox" name="special" value="true" id="specialCheckbox"> Mark as Special Content? (Pay-per-view)
              </label>
            </div>
            <div style="margin-bottom: 10px;" id="unlockPriceContainer" class="hidden">
              <label for="unlockPrice">Unlock Price (NGN):</label><br>
              <input type="number" name="unlockPrice" id="unlockPrice" min="0" class="form-input">
            </div>
            <button type="submit" class="form-button">Upload</button>
          </form>
        </div>
      <% } %>
    </div>
  <% } else if (isSubscribed) { %>
    <div class="chat-link-container">
      <a class="chat-link" href="/chat?creatorId=<%= user._id %>">
        Chat with <%= user.username %>
      </a>
    </div>
  <% } %>

  <a class="pro-logout-link" href="/logout">Log out</a>
</div>

<!-- Tip Modal for Creator-Level Tip -->
<div id="tipModal" class="tip-modal hidden">
  <div class="tip-modal-content">
    <span id="closeTipModal" class="close-tip-modal">×</span>
    <h3>Send A Tip to <%= user.username %></h3>
    <form id="tipForm">
      <label for="tipAmount">Tip Amount (NGN)</label>
      <input type="number" id="tipAmount" name="tipAmount" min="0" required placeholder="Enter tip amount in NGN">
      <label for="tipMessage">Message (optional)</label>
      <textarea id="tipMessage" name="tipMessage" placeholder="Write a kind message..."></textarea>
      <button type="submit" class="send-tip-button">Send Tip</button>
    </form>
  </div>
</div>

<script>
  // Helper function to safely get data attribute boolean
  function getDataBoolean(element, attributeName) {
      return element && element.dataset[attributeName] === 'true';
  }

  document.addEventListener('DOMContentLoaded', function() {
      console.log("Profile page script loaded.");
      const profileContainer = document.querySelector('.profile-container');
      const isCreatorViewingOwnProfile = getDataBoolean(profileContainer, 'isCreatorViewing');
      const isVisitorSubscribed = getDataBoolean(profileContainer, 'isSubscribed');

      // --- Subscription Dropdown Toggle ---
      const toggleBtn = document.getElementById('toggleBundlesBtn');
      const dropdown = document.getElementById('subscriptionDropdown');

      if (toggleBtn && dropdown) {
          dropdown.classList.add('hidden');
          toggleBtn.addEventListener('click', (e) => {
              e.stopPropagation();
              dropdown.classList.toggle('hidden');
              toggleBtn.classList.toggle('active', !dropdown.classList.contains('hidden'));
          });
          document.addEventListener('click', (e) => {
              if (!dropdown.contains(e.target) && !toggleBtn.contains(e.target)) {
                  dropdown.classList.add('hidden');
                  if (toggleBtn) toggleBtn.classList.remove('active');
              }
          });
      }

      // --- Toggle Unlock Price based on Special Checkbox ---
      if (isCreatorViewingOwnProfile) {
          const specialCheckbox = document.getElementById('specialCheckbox');
          const unlockPriceContainer = document.getElementById('unlockPriceContainer');
          const unlockPriceInput = document.getElementById('unlockPrice');

          if (specialCheckbox && unlockPriceContainer && unlockPriceInput) {
              const togglePriceVisibility = () => {
                  if (specialCheckbox.checked) {
                      unlockPriceContainer.classList.remove('hidden');
                      unlockPriceInput.required = true;
                  } else {
                      unlockPriceContainer.classList.add('hidden');
                      unlockPriceInput.required = false;
                  }
              };
              togglePriceVisibility();
              specialCheckbox.addEventListener('change', togglePriceVisibility);
          }
      }

      // --- Unlock Special Content ---
      document.querySelectorAll('.unlock-button').forEach(button => {
          button.addEventListener('click', async function(e) {
              e.preventDefault(); e.stopPropagation();
              const contentId = this.dataset.contentId;
              const creatorId = this.dataset.creatorId;
              const originalText = this.textContent;
              this.textContent = 'Processing...'; this.disabled = true;
              try {
                  const response = await fetch('/profile/unlock-special-content', {
                      method: 'POST',
                      headers: { 'Content-Type': 'application/json' },
                      body: JSON.stringify({ contentId, creatorId })
                  });
                  const result = await response.json();
                  if (response.ok && result.status === 'success' && result.data.paymentLink) {
                      this.textContent = 'Redirecting...';
                      window.location.href = result.data.paymentLink;
                  } else {
                      alert(result.message || 'Failed to initialize payment.');
                      this.textContent = originalText; this.disabled = false;
                  }
              } catch (error) {
                  console.error('Unlock Error:', error);
                  alert('Error unlocking.');
                  this.textContent = originalText; this.disabled = false;
              }
          });
      });

      // --- Like Button ---
      document.querySelectorAll('.like-button').forEach(button => {
          button.addEventListener('click', async function () {
              const postId = this.dataset.postId;
              const likeIcon = this.querySelector('i');
              const likeCountSpan = this.querySelector('.like-count');
              try {
                  const res = await fetch('/profile/posts/' + postId + '/like', { method: 'POST' });
                  const data = await res.json();
                  if (res.ok) {
                      likeCountSpan.textContent = data.likes;
                      likeIcon.classList.toggle('liked', data.userLiked);
                  } else {
                      alert(data.message || `Could not like post (Status: ${res.status})`);
                  }
              } catch (error) {
                  console.error('Like Error:', error);
                  alert('Error liking post.');
              }
          });
      });

      // --- Comment Icon Toggle ---
      document.querySelectorAll('.comment-icon').forEach(button => {
          button.addEventListener('click', function() {
              const mediaItem = this.closest('.media-item');
              if (!mediaItem) return;
              const commentContainer = mediaItem.querySelector('.comment-form-container');
              if (!commentContainer) return;
              const isHidden = commentContainer.classList.contains('hidden');
              commentContainer.classList.toggle('hidden');
              if (isHidden) {
                  const input = commentContainer.querySelector('input[name="comment"]');
                  if (input) input.focus();
              }
          });
      });

      // --- Comment Form Submit ---
      document.querySelectorAll('.comment-form').forEach(form => {
          form.addEventListener('submit', async function(e) {
              e.preventDefault();
              const postId = this.dataset.postId;
              const commentInput = this.comment;
              const commentText = commentInput.value.trim();
              const submitButton = this.querySelector('button[type="submit"]');
              if (!commentText) return;
              const originalButtonText = submitButton.textContent;
              submitButton.textContent = 'Posting...'; submitButton.disabled = true;
              try {
                  const res = await fetch('/profile/posts/' + postId + '/comment', {
                      method: 'POST',
                      headers: { 'Content-Type': 'application/json' },
                      body: JSON.stringify({ text: commentText })
                  });
                  if (res.ok) {
                      const data = await res.json();
                      const mediaItem = this.closest('.media-item');
                      const commentsDiv = mediaItem.querySelector('.comments');
                      const newCommentDiv = document.createElement('div');
                      newCommentDiv.classList.add('comment');
                      const username = data.comment && data.comment.user ? data.comment.user.username : 'You';
                      newCommentDiv.innerHTML = `<strong>${username}:</strong> ${data.comment.text}`;
                      const viewAllLink = commentsDiv.querySelector('.view-all-comments');
                      if (viewAllLink) {
                          commentsDiv.insertBefore(newCommentDiv, viewAllLink);
                      } else {
                          commentsDiv.appendChild(newCommentDiv);
                      }
                      const commentCountSpan = mediaItem.querySelector('.comment-count');
                      if (commentCountSpan && data.commentCount !== undefined) commentCountSpan.textContent = data.commentCount;
                      commentInput.value = '';
                      this.closest('.comment-form-container').classList.add('hidden');
                  } else {
                      const data = await res.json();
                      alert(data.message || `Failed to post comment (Status: ${res.status})`);
                  }
              } catch (error) {
                  console.error('Comment Error:', error);
                  alert('Error posting comment.');
              } finally {
                  submitButton.textContent = originalButtonText;
                  submitButton.disabled = false;
              }
          });
      });

      // --- AJAX for Bundle Subscription ---
      document.querySelectorAll('.subscribe-bundle-form').forEach(form => {
          form.addEventListener('submit', async function(e) {
              e.preventDefault();
              const submitButton = form.querySelector('button[type="submit"]');
              const originalHtml = submitButton.innerHTML;
              submitButton.innerHTML = 'Processing...'; submitButton.disabled = true;
              try {
                  const formData = new FormData(form);
                  const data = { creatorId: formData.get('creatorId'), bundleId: formData.get('bundleId') };
                  const response = await fetch('/profile/subscribe', {
                      method: 'POST',
                      headers: { 'Content-Type': 'application/json' },
                      body: JSON.stringify(data)
                  });
                  const result = await response.json();
                  if (response.ok && result.status === 'success' && result.data.paymentLink) {
                      submitButton.innerHTML = 'Redirecting...';
                      window.location.href = result.data.paymentLink;
                  } else {
                      alert(result.message || `Failed to subscribe (Status: ${response.status})`);
                      submitButton.innerHTML = originalHtml; submitButton.disabled = false;
                  }
              } catch (error) {
                  console.error('Sub Error:', error);
                  alert('Error subscribing.');
                  submitButton.innerHTML = originalHtml; submitButton.disabled = false;
              }
          });
      });

      // --- Tip Button (Post-specific) ---
      document.querySelectorAll('.tip-button').forEach(button => {
          button.addEventListener('click', async function() {
              const postId = this.dataset.postId;
              const creatorId = this.dataset.creatorId;
              let tipAmountNum = NaN;
              while(isNaN(tipAmountNum) || tipAmountNum <= 0) {
                  const tipAmountStr = prompt("Enter tip amount in NGN (e.g., 500):");
                  if (tipAmountStr === null) return;
                  tipAmountNum = parseFloat(tipAmountStr);
                  if (isNaN(tipAmountNum) || tipAmountNum <= 0) alert("Please enter a valid positive number.");
              }
              const originalHtml = this.innerHTML;
              this.innerHTML = 'Processing...'; this.disabled = true;
              try {
                  const response = await fetch('/profile/posts/' + postId + '/tip', {
                      method: 'POST',
                      headers: { 'Content-Type': 'application/json' },
                      body: JSON.stringify({ tipAmount: tipAmountNum, creatorId: creatorId })
                  });
                  const result = await response.json();
                  if (response.ok && result.status === 'success' && result.data.paymentLink) {
                      this.innerHTML = 'Redirecting...';
                      window.location.href = result.data.paymentLink;
                  } else {
                      alert(result.message || `Failed to initialize tip payment (Status: ${response.status})`);
                      this.innerHTML = originalHtml; this.disabled = false;
                  }
              } catch (error) {
                  console.error('Tip Error:', error);
                  alert('Error processing tip.');
                  this.innerHTML = originalHtml; this.disabled = false;
              }
          });
      });

      // --- Tip Modal Logic for Creator Tips ---
      const initializeTipModal = () => {
        const tipProfileButtons = document.querySelectorAll('.tip-profile-button');
        const tipModal = document.getElementById('tipModal');
        const closeTipModal = document.getElementById('closeTipModal');
        const tipForm = document.getElementById('tipForm');

        let currentCreatorId = null;

        console.log('Tip Profile Buttons:', tipProfileButtons);
        console.log('Tip Modal:', tipModal);

        if (!tipModal || tipProfileButtons.length === 0) {
          console.log('Tip modal or buttons not found, retrying...');
          setTimeout(initializeTipModal, 500); // Retry after 500ms
          return;
        }

        tipProfileButtons.forEach(button => {
          console.log('Adding event listener to button:', button);
          button.addEventListener('click', function() {
            console.log('Tip button clicked! Creator ID:', this.dataset.creatorId);
            currentCreatorId = this.dataset.creatorId;
            tipModal.classList.add('active');
            console.log('Modal active class added. Modal classes:', tipModal.classList);
          });
        });

        closeTipModal.addEventListener('click', () => {
          tipModal.classList.remove('active');
          tipForm.reset();
        });

        tipModal.addEventListener('click', (e) => {
          if (e.target === tipModal) {
            tipModal.classList.remove('active');
            tipForm.reset();
          }
        });

        tipForm.addEventListener('submit', async function(e) {
          e.preventDefault();
          const tipAmount = parseFloat(document.getElementById('tipAmount').value);
          const tipMessage = document.getElementById('tipMessage').value.trim();
          const submitButton = tipForm.querySelector('.send-tip-button');
          const originalText = submitButton.textContent;

          if (!tipAmount || tipAmount <= 0) {
            alert('Please enter a valid tip amount greater than 0.');
            return;
          }

          submitButton.textContent = 'Processing...';
          submitButton.disabled = true;

          try {
            const response = await fetch(`/profile/tip-creator/${currentCreatorId}`, {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ tipAmount, tipMessage })
            });
            const result = await response.json();
            if (response.ok && result.status === 'success' && result.data.paymentLink) {
              submitButton.textContent = 'Redirecting...';
              window.location.href = result.data.paymentLink;
            } else {
              alert(result.message || `Failed to initialize tip payment (Status: ${response.status})`);
              submitButton.textContent = originalText;
              submitButton.disabled = false;
            }
          } catch (err) {
            console.error('Profile Tip Error:', err);
            alert('Error processing tip.');
            submitButton.textContent = originalText;
            submitButton.disabled = false;
          } finally {
            tipModal.classList.remove('active');
            tipForm.reset();
          }
        });
      };

      initializeTipModal();

      // --- Tab Switching ---
      const tabButtons = document.querySelectorAll('.tab-button');
      const tabContents = document.querySelectorAll('.tab-content');
      tabButtons.forEach(button => {
          button.addEventListener('click', () => {
              tabButtons.forEach(btn => btn.classList.remove('active'));
              tabContents.forEach(content => content.classList.add('hidden'));
              button.classList.add('active');
              document.getElementById(`${button.dataset.tab}-tab`).classList.remove('hidden');
          });
      });

      // --- Sub-Tab Switching ---
      const subtabButtons = document.querySelectorAll('.subtab-button');
      const mediaViews = document.querySelectorAll('.media-view');
      subtabButtons.forEach(button => {
          button.addEventListener('click', () => {
              subtabButtons.forEach(btn => btn.classList.remove('active'));
              mediaViews.forEach(view => view.classList.remove('active'));
              button.classList.add('active');
              document.getElementById(`media-${button.dataset.subtab}`).classList.add('active');
          });
      });

      // --- Compact View Toggle ---
      const viewToggle = document.querySelector('.view-toggle-button');
      const mediaContents = document.querySelectorAll('.media-content');
      if (viewToggle) {
          viewToggle.addEventListener('click', () => {
              mediaContents.forEach(content => {
                  if (content.classList.contains('posts-list')) {
                      content.classList.remove('posts-list');
                      content.classList.add('media-list');
                      content.querySelectorAll('.normal-view-content').forEach(el => el.style.display = 'none');
                  } else {
                      content.classList.remove('media-list');
                      content.classList.add('posts-list');
                      content.querySelectorAll('.normal-view-content').forEach(el => el.style.display = 'block');
                  }
              });
              viewToggle.classList.toggle('active');
              const icon = viewToggle.querySelector('i');
              icon.classList.toggle('fa-th');
              icon.classList.toggle('fa-th-large');
          });
      }

      // --- Fullscreen Image Handling ---
      const fullscreenOverlay = document.getElementById('fullscreenOverlay');
      const fullscreenImage = document.getElementById('fullscreenImage');
      const closeFullscreen = document.getElementById('closeFullscreen');

      document.querySelectorAll('.post-image.fullscreenable').forEach(image => {
          image.addEventListener('click', () => {
              const src = image.dataset.fullscreenSrc;
              fullscreenImage.src = src;
              fullscreenOverlay.classList.add('active');
          });
      });

      closeFullscreen.addEventListener('click', () => {
          fullscreenOverlay.classList.remove('active');
          fullscreenImage.src = ''; // Clear src to reset
      });

      // Optional: Close on overlay click (outside image)
      fullscreenOverlay.addEventListener('click', (e) => {
          if (e.target === fullscreenOverlay) {
              fullscreenOverlay.classList.remove('active');
              fullscreenImage.src = '';
          }
      });
  });
</script>