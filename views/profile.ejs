<!-- profile.ejs -->
<div class="profile-container">
  <h1 class="pro-welcome-message">Welcome, <%= user.username %></h1>
  <a class="home-page-link" href="/home">Home</a>
  <% if (currentUser && currentUser.role === 'admin') { %>
    <a class="admin-dashboard-link" href="/admin">Admin Dashboard</a>
  <% } %>
  <p class="pro-email">Email: <%= user.email %></p>

  <% if (user.profileName) { %>
    <p class="profile-name">Profile Name: <%= user.profileName %></p>
  <% } %>
  <% if (user.bio) { %>
    <p class="bio">Bio: <%= user.bio %></p>
  <% } %>
  <% if (user.profilePicture) { %>
    <img class="profile-picture" src="<%= user.profilePicture %>" alt="Profile Picture">
  <% } else { %>
    <img class="profile-picture" src="/uploads/default-profile-picture.jpg" alt="Default Profile Picture">
  <% } %>

  <!-- If the logged-in user is the profile owner -->
  <% if (currentUser && currentUser._id.toString() === user._id.toString()) { %>
    <a class="pro-edit-profile-link" href="/profile/edit">Edit Profile</a>
    
    <% if (currentUser.role === 'creator') { %>
      <!-- Upload Content Section -->
      <h3>Upload Content</h3>
      <form action="/profile/uploadContent" method="POST" enctype="multipart/form-data">
        <label for="contentImage">Upload Image</label>
        <input type="file" name="contentImage" accept="image/*">
        <label for="contentVideo">Upload Video</label>
        <input type="file" name="contentVideo" accept="video/*">
        <label for="writeUp">Write-up / Caption</label>
        <textarea name="writeUp" id="writeUp"></textarea>
        <label for="special">Mark as Special Content?</label>
        <input type="checkbox" name="special" value="true">
        <label for="unlockPrice">Unlock Price (NGN):</label>
        <input type="number" name="unlockPrice" id="unlockPrice" min="0">
        <button type="submit">Upload</button>
      </form>

      <!-- Creator's Posts -->
      <% if (posts && posts.length > 0) { %>
        <div class="posts-section">
          <h2>Your Posts</h2>
          <div class="posts-list">
            <% posts.forEach(post => { %>
              <div class="post-card">
                <!-- Owner always sees real content -->
                <a href="/posts/<%= post._id %>">
                  <% if (post.type === 'image') { %>
                    <img src="<%= post.contentUrl %>" alt="Post Image" class="post-image">
                  <% } else if (post.type === 'video') { %>
                    <video controls class="post-video">
                      <source src="<%= post.contentUrl %>" type="video/mp4">
                      Your browser does not support the video tag.
                    </video>
                  <% } else if (post.type === 'text') { %>
                    <p class="post-text"><%= post.writeUp %></p>
                  <% } %>
                  <% if (post.writeUp && post.type !== 'text') { %>
                    <p class="post-writeUp"><%= post.writeUp %></p>
                  <% } %>
                </a>
                
                <% if (post.special) { %>
                  <p class="special-indicator">
                    Special Content - Unlock Price: ₦<%= post.unlockPrice %>
                  </p>
                <% } %>

                <!-- Post Actions: Like, Comment, Tip (tip count always displayed) -->
                <div class="post-actions">
                  <!-- Like Button -->
                  <button class="like-button" data-post-id="<%= post._id %>">
                    <i class="fa-solid fa-heart"></i>
                    <span class="like-count"><%= post.likes ? post.likes.length : 0 %></span>
                  </button>

                  <!-- Comment Info -->
                  <span class="comment-info">
                    <i class="fa-solid fa-comment"></i>
                    <span class="comment-count"><%= post.comments ? post.comments.length : 0 %></span>
                  </span>

                  <!-- Tip Info: Always visible for creators -->
                  <span class="tip-info">
                    <i class="fa-solid fa-gift"></i>
                    <span class="tip-count"><%= post.totalTips || 0 %></span>
                  </span>

                  <!-- If viewer is not the creator, show tip button -->
                  <% if (currentUser._id.toString() !== user._id.toString()) { %>
                    <button class="tip-button" data-post-id="<%= post._id %>" data-creator-id="<%= user._id %>">
                      Tip
                    </button>
                  <% } %>
                </div>

                <!-- Comments Section -->
                <div class="comments">
                  <% if (post.comments && post.comments.length > 0) { %>
                    <% post.comments.forEach(comment => { %>
                      <div class="comment">
                        <strong><%= comment.user.username %>:</strong> <%= comment.text %>
                      </div>
                    <% }); %>
                  <% } %>
                </div>
                <!-- Comment Form -->
                <form class="comment-form" data-post-id="<%= post._id %>">
                  <input type="text" name="comment" placeholder="Add a comment">
                  <button type="submit">Comment</button>
                </form>

                <!-- Delete Post Button -->
                <form
                  action="/profile/delete-post/<%= post._id %>"
                  method="POST"
                  onsubmit="return confirm('Are you sure you want to delete this post?');"
                >
                  <button type="submit" class="delete-post-btn">Delete Post</button>
                </form>
              </div>
            <% }); %>
          </div>
        </div>
      <% } else { %>
        <p>You have not uploaded any posts yet.</p>
      <% } %>

      <!-- Create Subscription Bundle Section -->
      <h3>Create Subscription Bundle</h3>
      <form action="/profile/create-bundle" method="POST">
        <label for="bundlePrice">Bundle Price (NGN):</label>
        <input type="number" name="price" id="bundlePrice" min="0" required>
      
        <label for="bundleDuration">Bundle Duration:</label>
        <select name="duration" id="bundleDuration" required>
          <option value="" disabled selected>-- Select Duration --</option>
          <option value="1 day">1 day</option>
          <option value="1 month">1 month</option>
          <option value="3 months">3 months</option>
          <option value="6 months">6 months</option>
          <option value="1 year">1 year</option>
        </select>
      
        <label for="bundleDescription">Bundle Description:</label>
        <textarea name="description" id="bundleDescription" required></textarea>
      
        <button type="submit">Create Bundle</button>
      </form>

      <!-- Subscription Bundles -->
      <% if (bundles && bundles.length > 0) { %>
        <div class="subscription-bundles">
          <h2>Your Subscription Bundles</h2>
          <ul class="bundles-list">
            <% bundles.forEach(bundle => { %>
              <li class="bundle-item">
                <p>Price: <%= bundle.price %></p>
                <p>Duration: <%= bundle.duration %></p>
                <p>Description: <%= bundle.description %></p>
              </li>
            <% }); %>
          </ul>
        </div>
      <% } else { %>
        <p>No subscription bundles available.</p>
      <% } %>

    <% } %>
  
  <% } else { %>
    <!-- Viewer (non-owner) profile view -->
    <% if (isSubscribed) { %>
      <form action="/profile/unsubscribe/<%= user._id %>" method="POST">
        <button type="submit" class="unsubscribe-btn">Unsubscribe</button>
      </form>

      <% if (posts && posts.length > 0) { %>
        <div class="posts-section">
          <h2><%= user.username %>'s Posts</h2>
          <div class="posts-list">
            <% posts.forEach(post => { %>
              <div class="post-card">
                <a href="/posts/<%= post._id %>">
                  <% if (post.special) {
                       const hasPurchased = currentUser.purchasedContent &&
                         currentUser.purchasedContent.some(
                           p => p.contentId.toString() === post._id.toString()
                         );
                  %>
                    <% if (!hasPurchased) { %>
                      <!-- Locked Special Content -->
                      <div class="locked-content-container" style="position: relative;">
                        <% if (post.type === 'image') { %>
                          <img src="https://placehold.co/300x200/ff69b4/ffffff?text=Locked+Content" alt="Locked Image" class="post-image">
                        <% } else if (post.type === 'video') { %>
                          <img src="https://placehold.co/300x200/ff69b4/ffffff?text=Locked+Video" alt="Locked Video" class="post-image">
                        <% } else if (post.type === 'text') { %>
                          <p class="post-text"><%= post.writeUp %></p>
                        <% } %>
                        <% if (post.writeUp && post.type !== 'text') { %>
                          <p class="post-writeUp"><%= post.writeUp %></p>
                        <% } %>
                        <div class="unlock-overlay" style="
                          position: absolute;
                          top: 0; left: 0; right: 0; bottom: 0;
                          display: flex;
                          flex-direction: column;
                          align-items: center;
                          justify-content: center;
                          background: rgba(0,0,0,0.5);
                          color: white;
                          font-size: 1.2em;
                        ">
                          <div>Pay to unlock (₦<%= post.unlockPrice %>)</div>
                          <button class="unlock-button" data-content-id="<%= post._id %>" data-creator-id="<%= user._id %>" style="margin-top: 10px; padding: 8px 16px;">Unlock</button>
                        </div>
                      </div>
                    <% } else { %>
                      <!-- Unlocked Special Content -->
                      <% if (post.type === 'image') { %>
                        <img src="<%= post.contentUrl %>" alt="Special Content" class="post-image">
                      <% } else if (post.type === 'video') { %>
                        <video controls class="post-video">
                          <source src="<%= post.contentUrl %>" type="video/mp4">
                          Your browser does not support the video tag.
                        </video>
                      <% } else if (post.type === 'text') { %>
                        <p class="post-text"><%= post.writeUp %></p>
                      <% } %>
                      <% if (post.writeUp && post.type !== 'text') { %>
                        <p class="post-writeUp"><%= post.writeUp %></p>
                      <% } %>
                    <% } %>
                  <% } else { %>
                    <!-- Non-special Content -->
                    <% if (post.type === 'image') { %>
                      <img src="<%= post.contentUrl %>" alt="Post Image" class="post-image">
                    <% } else if (post.type === 'video') { %>
                      <video controls class="post-video">
                        <source src="<%= post.contentUrl %>" type="video/mp4">
                        Your browser does not support the video tag.
                      </video>
                    <% } else if (post.type === 'text') { %>
                      <p class="post-text"><%= post.writeUp %></p>
                    <% } %>
                    <% if (post.writeUp && post.type !== 'text') { %>
                      <p class="post-writeUp"><%= post.writeUp %></p>
                    <% } %>
                  <% } %>
                </a>

                <!-- Post Actions: Like, Comment, Tip -->
                <div class="post-actions">
                  <button class="like-button" data-post-id="<%= post._id %>">
                    <i class="fa-solid fa-heart"></i>
                    <span class="like-count"><%= post.likes ? post.likes.length : 0 %></span>
                  </button>
                  <span class="comment-info">
                    <i class="fa-solid fa-comment"></i>
                    <span class="comment-count"><%= post.comments ? post.comments.length : 0 %></span>
                  </span>
                  <% if (currentUser._id.toString() !== user._id.toString()) { %>
                    <button class="tip-button" data-post-id="<%= post._id %>" data-creator-id="<%= user._id %>">
                      <i class="fa-solid fa-gift"></i>
                      Tip (<span class="tip-count"><%= post.totalTips || 0 %></span>)
                    </button>
                  <% } else { %>
                    <!-- If viewer is creator, always show tip count -->
                    <span class="tip-info">
                      <i class="fa-solid fa-gift"></i>
                      <span class="tip-count"><%= post.totalTips || 0 %></span>
                    </span>
                  <% } %>
                </div>

                <!-- Comments Section -->
                <div class="comments">
                  <% if (post.comments && post.comments.length > 0) { %>
                    <% post.comments.forEach(comment => { %>
                      <div class="comment">
                        <strong><%= comment.user.username %>:</strong> <%= comment.text %>
                      </div>
                    <% }); %>
                  <% } %>
                </div>
                <!-- Comment Form -->
                <form class="comment-form" data-post-id="<%= post._id %>">
                  <input type="text" name="comment" placeholder="Add a comment">
                  <button type="submit">Comment</button>
                </form>
              </div>
            <% }); %>
          </div>
        </div>
      <% } else { %>
        <p>No posts to show.</p>
      <% } %>

      <!-- Chat Link: only for subscribed users -->
      <div class="chat-link-container" style="margin-top: 20px;">
        <a class="chat-link" href="/chat?creatorId=<%= user._id %>">
          Chat with <%= user.username %>
        </a>
      </div>

    <% } else { %>
      <p>You must subscribe to view this creator's content.</p>
      <% if (bundles && bundles.length > 0) { %>
        <div class="subscription-bundles">
          <h2><%= user.username %>'s Subscription Bundles</h2>
          <ul class="bundles-list">
            <% bundles.forEach(bundle => { %>
              <li class="bundle-item">
                <p>Price: <%= bundle.price %></p>
                <p>Duration: <%= bundle.duration %></p>
                <p>Description: <%= bundle.description %></p>
                <form action="/profile/subscribe" method="POST">
                  <input type="hidden" name="creatorId" value="<%= user._id %>">
                  <input type="hidden" name="bundleId" value="<%= bundle._id %>">
                  <button type="submit" class="subscribe-btn">Subscribe</button>
                </form>
              </li>
            <% }); %>
          </ul>
        </div>
      <% } else { %>
        <p>No subscription bundles available.</p>
      <% } %>
    <% } %>
  <% } %>

  <a class="pro-logout-link" href="/logout">Log out</a>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Unlock special content functionality
    const unlockButtons = document.querySelectorAll('.unlock-button');
    unlockButtons.forEach(button => {
      button.addEventListener('click', async function() {
        const contentId = this.dataset.contentId;
        const creatorId = this.dataset.creatorId;
        const originalText = this.textContent;
        this.textContent = 'Processing...';
        this.disabled = true;
        try {
          const response = await fetch('/profile/unlock-special-content', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ contentId, creatorId })
          });
          const result = await response.json();
          console.log('Unlock Payment Response:', result);
          if (response.ok && result.status === 'success' && result.data.paymentLink) {
            window.location.href = result.data.paymentLink;
          } else {
            alert(result.message || 'Failed to initialize payment');
            this.textContent = originalText;
            this.disabled = false;
          }
        } catch (error) {
          console.error('Error:', error);
          alert('An error occurred while processing your request');
          this.textContent = originalText;
          this.disabled = false;
        }
      });
    });

    // Like button functionality
    document.querySelectorAll('.like-button').forEach(button => {
      button.addEventListener('click', async function () {
        const postId = this.dataset.postId;
        try {
          const res = await fetch('/profile/posts/' + postId + '/like', { method: 'POST' });
          const data = await res.json();
          if (res.ok) {
            this.querySelector('.like-count').textContent = data.likes;
          } else {
            alert(data.message);
          }
        } catch (error) {
          console.error('Error:', error);
          alert('An error occurred while liking the post.');
        }
      });
    });

    // Comment form functionality
    document.querySelectorAll('.comment-form').forEach(form => {
      form.addEventListener('submit', async function (e) {
        e.preventDefault();
        const postId = this.dataset.postId;
        const commentText = this.comment.value.trim();
        if (!commentText) return;
        try {
          const res = await fetch('/profile/posts/' + postId + '/comment', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ text: commentText })
          });
          const data = await res.json();
          if (res.ok) {
            location.reload();
          } else {
            alert(data.message);
          }
        } catch (error) {
          console.error('Error:', error);
          alert('An error occurred while submitting your comment.');
        }
      });
    });

    // Subscription button functionality using AJAX
    const subscriptionForms = document.querySelectorAll('form[action="/profile/subscribe"]');
    subscriptionForms.forEach(form => {
      form.addEventListener('submit', async function(e) {
        e.preventDefault();
        const submitButton = form.querySelector('button[type="submit"]');
        const originalText = submitButton.textContent;
        submitButton.textContent = 'Processing...';
        submitButton.disabled = true;
        try {
          const formData = new FormData(form);
          const data = {
            creatorId: formData.get('creatorId'),
            bundleId: formData.get('bundleId')
          };
          const response = await fetch('/profile/subscribe', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data)
          });
          const result = await response.json();
          if (response.ok && result.status === 'success' && result.data.paymentLink) {
            submitButton.textContent = 'Redirecting...';
            window.location.href = result.data.paymentLink;
          } else {
            submitButton.textContent = originalText;
            submitButton.disabled = false;
            alert(result.message || 'Failed to initialize payment');
          }
        } catch (error) {
          console.error('Error:', error);
          submitButton.textContent = originalText;
          submitButton.disabled = false;
          alert('An error occurred while processing your subscription');
        }
      });
    });

    // Tip button functionality
    document.querySelectorAll('.tip-button').forEach(button => {
      button.addEventListener('click', async function() {
        const tipAmount = prompt("Enter tip amount in NGN:");
        if (!tipAmount) return;
        const postId = this.dataset.postId;
        const creatorId = this.dataset.creatorId;
        const originalText = this.textContent;
        this.textContent = 'Processing...';
        this.disabled = true;
        try {
          const response = await fetch('/profile/posts/' + postId + '/tip', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ tipAmount })
          });
          const result = await response.json();
          console.log('Tip Payment Response:', result);
          if (response.ok && result.status === 'success' && result.data.paymentLink) {
            window.location.href = result.data.paymentLink;
          } else {
            alert(result.message || 'Failed to initialize tip payment');
            this.textContent = originalText;
            this.disabled = false;
          }
        } catch (error) {
          console.error('Error:', error);
          alert('An error occurred while processing your tip');
          this.textContent = originalText;
          this.disabled = false;
        }
      });
    });
  });
</script>
