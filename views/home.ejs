<!-- home.ejs -->
<!-- Pink Search Form (GET /home with ?query=...) -->
<form class="search-form" action="/home" method="GET">
  <input
    type="text"
    name="query"
    placeholder="Search creators..."
    value="<%= search || '' %>"
  />
  <button type="submit">Search</button>
</form>

<% if (search && search.length > 0) { %>
  <!-- We are in "search mode" => Show matching creators -->
  <h1>Search Results for "<%= search %>"</h1>

  <% if (creators && creators.length > 0) { %>
    <% creators.forEach(creator => { %>
      <div class="creator-result">
        <img
          src="<%= creator.profilePicture || '/uploads/default-profile-picture.jpg' %>"
          alt="<%= creator.username %>"
          class="creator-profile-pic"
          style="width: 40px; height: 40px; border-radius: 50%; object-fit: cover;"
        />
        <a href="/profile/view/<%= creator._id %>">
          <strong><%= creator.username %></strong>
        </a>
        <% if (creator.profileName) { %>
          <p>Profile Name: <%= creator.profileName %></p>
        <% } %>
      </div>
    <% }); %>
  <% } else { %>
    <p>No matching creators found.</p>
  <% } %>

<% } else { %>
  <!-- Feed mode -->

  <!-- Trending Creators Section -->
  <% if (featuredCreators && featuredCreators.length > 0) { %>
    <div class="trending-creators-container">
      <h2>Trending Creators</h2>
      <!-- Navigation Arrows -->
      <div class="slider-nav left-nav" id="prevCreators">
        <i class="fa-solid fa-chevron-left"></i>
      </div>
      <div class="slider-nav right-nav" id="nextCreators">
        <i class="fa-solid fa-chevron-right"></i>
      </div>
      <div class="trending-creators-list">
        <% featuredCreators.forEach((creator, index) => { %>
          <% let bgImage = creator.coverPhoto ? `${creator.coverPhoto}` : '/uploads/default-cover.jpg'; %>
          <div class="featured-creator-card" data-index="<%= index %>">
            <!-- Cover Photo as Background -->
            <div 
              class="creator-card-background" 
              style="background-image: url('<%= bgImage %>');"
            >
              <!-- Subscriber Count in Top-Right -->
              <div class="subscriber-count">
                <p><%= creator.subscriberCount %> subscriber(s)</p>
              </div>
              <!-- Profile Photo -->
              <div class="profile-picture-container">
                <img
                  src="<%= creator.profilePicture || '/uploads/default-profile-picture.jpg' %>"
                  alt="<%= creator.username %> profile"
                  class="profile-picture"
                />
              </div>
              <!-- Creator Info (Username and Profile Name in a column) -->
              <div class="creator-info">
                <a href="/profile/view/<%= creator._id %>">
                  <strong><%= creator.username %></strong>
                </a>
                <% if (creator.profileName) { %>
                  <p><%= creator.profileName %></p>
                <% } %>
              </div>
            </div>
          </div>
        <% }); %>
      </div>
    </div>
  <% } %>
  <!-- Feed mode: show subscribed posts -->
  <div class="feed-container">
    <% if (posts && posts.length > 0) { %>
      <% posts.forEach(post => { %>
        <div class="post-card">
          <div class="post-header">
            <img
              src="<%= post.creator.profilePicture || '/uploads/default-profile-picture.jpg' %>"
              alt="<%= post.creator.username %> profile"
              class="creator-profile-pic"
            />
            <a href="/profile/view/<%= post.creator._id %>" class="creator-name">
              <%= post.creator.username %>
            </a>
          </div>
          <div class="post-body">
            <!-- IMAGE POST -->
            <% if (post.type === 'image') { %>
              <% if (post.special && post.locked) { %>
                <div class="locked-image-container" style="position: relative;">
                  <img
                    src="https://placehold.co/300x200/ff69b4/ffffff?text=Locked+Content"
                    alt="Locked Image"
                    class="post-image"
                  />
                  <div
                    class="unlock-overlay"
                    style="
                      position: absolute;
                      top: 0; left: 0; right: 0; bottom: 0;
                      display: flex;
                      flex-direction: column;
                      align-items: center;
                      justify-content: center;
                      background: rgba(0,0,0,0.5);
                      color: white;
                      font-size: 1.2em;
                    "
                  >
                    <div>Pay to unlock</div>
                    <button
                      class="unlock-button"
                      data-content-id="<%= post._id %>"
                      data-creator-id="<%= post.creator._id %>"
                      style="margin-top: 10px; padding: 8px 16px;"
                    >
                      Unlock
                    </button>
                  </div>
                </div>
              <% } else { %>
                <img
                  src="<%= post.contentUrl %>"
                  alt="Post Image"
                  class="post-image fullscreenable"
                  data-fullscreen-src="<%= post.contentUrl %>"
                />
              <% } %>
            <% } else if (post.type === 'video') { %>
              <% if (post.special && post.locked) { %>
                <div class="locked-video-container" style="position: relative;">
                  <img
                    src="https://placehold.co/300x200/ff69b4/ffffff?text=Locked+Video"
                    alt="Locked Video"
                    class="post-image"
                  />
                  <div
                    class="unlock-overlay"
                    style="
                      position: absolute;
                      top: 0; left: 0; right: 0; bottom: 0;
                      display: flex;
                      flex-direction: column;
                      align-items: center;
                      justify-content: center;
                      background: rgba(0,0,0,0.5);
                      color: white;
                      font-size: 1.2em;
                    "
                  >
                    <div>Pay to unlock</div>
                    <button
                      class="unlock-button"
                      data-content-id="<%= post._id %>"
                      data-creator-id="<%= post.creator._id %>"
                      style="margin-top: 10px; padding: 8px 16px;"
                    >
                      Unlock
                    </button>
                  </div>
                </div>
              <% } else { %>
                <video controls class="post-video">
                  <source src="<%= post.contentUrl %>" type="video/mp4">
                  Your browser does not support the video tag.
                </video>
              <% } %>
            <% } else if (post.type === 'text') { %>
              <p class="post-text"><%= post.writeUp %></p>
            <% } %>
            <% if (post.writeUp && post.type !== 'text') { %>
              <p class="post-text" style="margin-top: 10px;"><%= post.writeUp %></p>
            <% } %>
          </div>
          <!-- Post Actions: Like, Comment, Tip -->
          <div class="post-actions">
            <!-- Like Button -->
            <button class="like-button" data-post-id="<%= post._id %>">
              <i class="fa-solid fa-heart"></i>
              <span class="like-count"><%= post.likes ? post.likes.length : 0 %></span>
            </button>
            <!-- Comment Icon (toggling comment form) -->
            <button class="comment-icon" data-post-id="<%= post._id %>">
              <i class="fa-solid fa-comment"></i>
              <span class="comment-count"><%= post.comments ? post.comments.length : 0 %></span>
            </button>
            <!-- Tip Button (only if viewer isn't the creator) -->
            <% if (currentUser._id.toString() !== post.creator._id.toString()) { %>
              <button class="tip-button" data-post-id="<%= post._id %>" data-creator-id="<%= post.creator._id %>">
                <i class="fa-solid fa-gift"></i>
                Tip (<span class="tip-count"><%= post.totalTips || 0 %></span>)
              </button>
            <% } %>
          </div>
          <!-- Comments Section -->
          <div class="comments">
            <% if (post.comments && post.comments.length > 0) { %>
              <% post.comments.forEach(comment => { %>
                <div class="comment">
                  <strong><%= comment.user.username %>:</strong> <%= comment.text %>
                </div>
              <% }); %>
            <% } %>
          </div>
          <!-- Hidden Inline Comment Form Container -->
          <div class="comment-form-container" style="display: none;">
            <form class="comment-form" data-post-id="<%= post._id %>">
              <input type="text" name="comment" placeholder="Write your comment...">
              <button type="submit">Comment</button>
            </form>
          </div>
        </div>
      <% }); %>
    <% } else { %>
      <p>No posts available.</p>
    <% } %>
  </div>
<% } %>

<!-- JavaScript for Like, Comment, Unlock, Tip, Trending Creators Navigation, and Full-Screen Images -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Like Button Functionality
    document.querySelectorAll('.like-button').forEach(button => {
      button.addEventListener('click', async function() {
        const postId = this.dataset.postId;
        try {
          const res = await fetch('/profile/posts/' + postId + '/like', { method: 'POST' });
          const data = await res.json();
          if (res.ok) {
            this.querySelector('.like-count').textContent = data.likes;
          } else {
            alert(data.message);
          }
        } catch (error) {
          console.error('Error:', error);
          alert('An error occurred while liking the post.');
        }
      });
    });

    // Comment Icon Functionality: toggle the inline comment form
    document.querySelectorAll('.comment-icon').forEach(button => {
      button.addEventListener('click', function() {
        const postId = this.dataset.postId;
        const postCard = this.closest('.post-card');
        if (!postCard) {
          console.error("Could not find closest .post-card for post:", postId);
          return;
        }
        const commentContainer = postCard.querySelector('.comment-form-container');
        if (!commentContainer) {
          console.error("No comment-form-container found in post-card for post:", postId);
          return;
        }
        commentContainer.style.display = commentContainer.style.display === 'block' ? 'none' : 'block';
        if (commentContainer.style.display === 'block') {
          const input = commentContainer.querySelector('input[name="comment"]');
          if (input) input.focus();
        }
      });
    });

    // Comment Form Functionality
    document.querySelectorAll('.comment-form').forEach(form => {
      form.addEventListener('submit', async function(e) {
        e.preventDefault();
        const postId = this.dataset.postId;
        const commentText = this.comment.value.trim();
        if (!commentText) return;
        try {
          const res = await fetch('/profile/posts/' + postId + '/comment', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ text: commentText })
          });
          if (res.ok) {
            location.reload();
          } else {
            const data = await res.json();
            alert(data.message);
          }
        } catch (error) {
          console.error('Error:', error);
          alert('An error occurred while submitting your comment.');
        }
      });
    });

    // Unlock Button Functionality
    document.querySelectorAll('.unlock-button').forEach(button => {
      button.addEventListener('click', async function() {
        const contentId = this.dataset.contentId;
        const creatorId = this.dataset.creatorId;
        const originalText = this.textContent;
        this.textContent = 'Processing...';
        this.disabled = true;
        try {
          const response = await fetch('/profile/unlock-special-content', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ contentId, creatorId })
          });
          const result = await response.json();
          if (response.ok && result.status === 'success' && result.data.paymentLink) {
            window.location.href = result.data.paymentLink;
          } else {
            alert(result.message || 'Failed to initialize payment');
            this.textContent = originalText;
            this.disabled = false;
          }
        } catch (error) {
          console.error('Error:', error);
          alert('An error occurred while processing your request');
          this.textContent = originalText;
          this.disabled = false;
        }
      });
    });

    // Tip Button Functionality
    document.querySelectorAll('.tip-button').forEach(button => {
      button.addEventListener('click', async function() {
        const tipAmount = prompt("Enter tip amount in NGN:");
        if (!tipAmount) return;
        const postId = this.dataset.postId;
        const creatorId = this.dataset.creatorId;
        const originalText = this.textContent;
        this.textContent = 'Processing...';
        this.disabled = true;
        try {
          const response = await fetch('/profile/posts/' + postId + '/tip', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ tipAmount })
          });
          const result = await response.json();
          if (response.ok && result.status === 'success' && result.data.paymentLink) {
            window.location.href = result.data.paymentLink;
          } else {
            alert(result.message || 'Failed to initialize tip payment');
            this.textContent = originalText;
            this.disabled = false;
          }
        } catch (error) {
          console.error('Error:', error);
          alert('An error occurred while processing your tip');
          this.textContent = originalText;
          this.disabled = false;
        }
      });
    });

    // Full-screen image functionality for post images
    const fullscreenOverlay = document.createElement('div');
    fullscreenOverlay.classList.add('fullscreen-overlay');
    document.body.appendChild(fullscreenOverlay);

    const fullscreenImg = document.createElement('img');
    fullscreenOverlay.appendChild(fullscreenImg);

    const closeButton = document.createElement('button');
    closeButton.classList.add('close-fullscreen');
    closeButton.innerHTML = '&times;'; // HTML entity for "×"
    fullscreenOverlay.appendChild(closeButton);

    document.querySelectorAll('.fullscreenable').forEach(img => {
      img.addEventListener('click', function() {
        const src = this.dataset.fullscreenSrc;
        fullscreenImg.src = src;
        fullscreenOverlay.classList.add('active');
      });
    });

    // Close on overlay click (outside image)
    fullscreenOverlay.addEventListener('click', function(e) {
      if (e.target === fullscreenOverlay) {
        fullscreenOverlay.classList.remove('active');
      }
    });

    // Close on button click
    closeButton.addEventListener('click', function() {
      fullscreenOverlay.classList.remove('active');
    });

    // Close on Escape key
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape' && fullscreenOverlay.classList.contains('active')) {
        fullscreenOverlay.classList.remove('active');
      }
    });

    // Trending Creators Navigation
    const creatorCards = document.querySelectorAll('.featured-creator-card');
    const totalCreators = creatorCards.length;
    const creatorsPerPage = 3;
    let currentPage = 0;

    function updateCreatorsDisplay() {
      const startIndex = currentPage * creatorsPerPage;
      const endIndex = startIndex + creatorsPerPage;

      creatorCards.forEach((card, index) => {
        card.style.display = (index >= startIndex && index < endIndex) ? 'block' : 'none';
      });

      document.getElementById('prevCreators').style.opacity = currentPage === 0 ? '0.5' : '1';
      document.getElementById('prevCreators').style.pointerEvents = currentPage === 0 ? 'none' : 'auto';
      document.getElementById('nextCreators').style.opacity = endIndex >= totalCreators ? '0.5' : '1';
      document.getElementById('nextCreators').style.pointerEvents = endIndex >= totalCreators ? 'none' : 'auto';
    }

    document.getElementById('prevCreators').addEventListener('click', function() {
      if (currentPage > 0) {
        currentPage--;
        updateCreatorsDisplay();
      }
    });

    document.getElementById('nextCreators').addEventListener('click', function() {
      if ((currentPage + 1) * creatorsPerPage < totalCreators) {
        currentPage++;
        updateCreatorsDisplay();
      }
    });

    // Initial display
    updateCreatorsDisplay();
  });
</script>