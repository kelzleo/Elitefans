<!-- views/request-creator.ejs -->
<div class="request-creator-container" style="max-width: 600px; margin: auto; padding: 20px;">
  <h1>Request to Become a Creator</h1>
  
  <% if (requestPending) { %>
    <p>Your creator request is currently being processed. Approval could take 24â€“72 hours.</p>
  <% } else { %>
    <p>Please fill in the details below. Your sensitive information will only be visible to our admin team.</p>
    <p style="font-size: 0.9em; color: #666;">Your photo is processed to verify eligibility, and BVN is deleted after admin review.</p>
  
    <form id="creatorRequestForm" action="/request-creator" method="POST" enctype="multipart/form-data" style="display: flex; flex-direction: column; gap: 15px;">
      <!-- BVN -->
      <div>
        <label for="bvn" style="display: block; margin-bottom: 5px;">BVN</label>
        <input 
          type="text" 
          id="bvn" 
          name="bvn" 
          placeholder="Enter your 11-digit BVN" 
          required 
          pattern="\d{11}"
          style="width: 100%; padding: 8px; border: 1px solid #ccc; border-radius: 4px;"
        />
        <p id="bvnError" style="color: red; font-size: 0.9em; display: none;">BVN must be an 11-digit number.</p>
      </div>

      <!-- First Name -->
      <div>
        <label for="firstName" style="display: block; margin-bottom: 5px;">First Name</label>
        <input 
          type="text" 
          id="firstName" 
          name="firstName" 
          placeholder="Enter your first name" 
          required 
          style="width: 100%; padding: 8px; border: 1px solid #ccc; border-radius: 4px;"
        />
      </div>

      <!-- Last Name -->
      <div>
        <label for="lastName" style="display: block; margin-bottom: 5px;">Last Name</label>
        <input 
          type="text" 
          id="lastName" 
          name="lastName" 
          placeholder="Enter your last name" 
          required 
          style="width: 100%; padding: 8px; border: 1px solid #ccc; border-radius: 4px;"
        />
      </div>

      <!-- Passport Photograph -->
      <div>
        <label style="display: block; margin-bottom: 5px;">Passport Photograph</label>
        <button type="button" id="openCameraModal" style="padding: 10px 20px;">Open Camera</button>
        <div id="capturedPhotoPreview" style="margin-top: 10px; display: none;">
          <img id="capturedPhoto" src="" alt="Captured Photo" style="max-width: 100%; border: 1px solid #ccc;"/>
          <button type="button" id="retakeButton" style="margin-top: 10px; padding: 10px 20px;">Retake Photo</button>
        </div>
        <input type="hidden" name="passportPhotoData" id="passportPhotoData" />
        <input type="hidden" name="estimatedAge" id="estimatedAge" />
        <p style="font-size: 0.9em; color: #666;">Capture a clear, passport-style photograph using your device camera.</p>
        <p id="photoMessage" style="font-size: 0.9em; display: none; color: #666;"></p>
      </div>

      <!-- Submit Button -->
      <button type="submit" id="submitButton" disabled style="padding: 10px 20px; background-color: #ccc; color: #fff; border: none; border-radius: 4px; cursor: not-allowed;">
        Submit Creator Request
      </button>
      <p id="loadingMessage" style="display: none; color: #666;">Processing your photo, please wait...</p>
    </form>
  <% } %>
</div>

<!-- Modal for Camera Capture -->
<div id="cameraModal" style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.8); display: none; justify-content: center; align-items: center; z-index: 9999;">
  <div style="background: #fff; padding: 20px; border-radius: 8px; text-align: center; width: 90%; max-width: 800px;">
    <h2>Camera Capture</h2>
    <video id="modalVideo" autoplay playsinline style="width: 100%; max-height: 70vh; border: 1px solid #ccc;"></video>
    <br/>
    <button type="button" id="captureButtonModal" style="padding: 10px 20px; margin-top: 10px;">Capture Photo</button>
    <button type="button" id="closeCameraModal" style="padding: 10px 20px; margin-top: 10px;">Cancel</button>
  </div>
</div>

<script>
  const openCameraModalButton = document.getElementById('openCameraModal');
  const capturedPhotoPreview = document.getElementById('capturedPhotoPreview');
  const capturedPhoto = document.getElementById('capturedPhoto');
  const passportPhotoDataInput = document.getElementById('passportPhotoData');
  const estimatedAgeInput = document.getElementById('estimatedAge');
  const retakeButton = document.getElementById('retakeButton');
  const cameraModal = document.getElementById('cameraModal');
  const modalVideo = document.getElementById('modalVideo');
  const captureButtonModal = document.getElementById('captureButtonModal');
  const closeCameraModal = document.getElementById('closeCameraModal');
  const form = document.getElementById('creatorRequestForm');
  const bvnInput = document.getElementById('bvn');
  const bvnError = document.getElementById('bvnError');
  const submitButton = document.getElementById('submitButton');
  const loadingMessage = document.getElementById('loadingMessage');
  const photoMessage = document.getElementById('photoMessage');

  let stream;

  function openCameraModalFunc() {
    cameraModal.style.display = 'flex';
    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
      navigator.mediaDevices.getUserMedia({ video: true })
        .then(function(mediaStream) {
          stream = mediaStream;
          modalVideo.srcObject = stream;
          modalVideo.play();
        })
        .catch(function(err) {
          alert("Unable to access the camera. Please check your browser settings.");
        });
    } else {
      alert("Your browser does not support webcam access.");
    }
  }

  function closeCameraModalFunc() {
    cameraModal.style.display = 'none';
    if (stream) {
      stream.getTracks().forEach(track => track.stop());
      stream = null;
    }
  }

  async function estimateAge(photoData) {
    loadingMessage.style.display = 'block';
    photoMessage.style.display = 'block';
    photoMessage.textContent = 'Processing photo...';

    try {
      console.log('Captured photo data:', photoData.substring(0, 50));
      const response = await fetch('/request-creator/estimate-age', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ photoData })
      });
      const result = await response.json();
      if (result.success) {
        estimatedAgeInput.value = result.age;
        photoMessage.textContent = 'Photo captured successfully.';
        submitButton.disabled = false;
        submitButton.style.backgroundColor = '#f00';
        submitButton.style.cursor = 'pointer';
      } else {
        estimatedAgeInput.value = '';
        photoMessage.style.color = 'red';
        photoMessage.textContent = result.message || 'Failed to process photo. Please try again with a clear face.';
        submitButton.disabled = true;
        submitButton.style.backgroundColor = '#ccc';
        submitButton.style.cursor = 'not-allowed';
      }
    } catch (err) {
      console.error('Client-side error:', err);
      estimatedAgeInput.value = '';
      photoMessage.style.color = 'red';
      photoMessage.textContent = 'Failed to process photo. Please check your connection and try again.';
      submitButton.disabled = true;
      submitButton.style.backgroundColor = '#ccc';
      submitButton.style.cursor = 'not-allowed';
    }
    loadingMessage.style.display = 'none';
  }

  openCameraModalButton.addEventListener('click', openCameraModalFunc);
  closeCameraModal.addEventListener('click', closeCameraModalFunc);

  captureButtonModal.addEventListener('click', async function() {
    const canvas = document.createElement('canvas');
    canvas.width = 480;
    canvas.height = 360;
    const context = canvas.getContext('2d');
    context.drawImage(modalVideo, 0, 0, 480, 360);
    const dataURL = canvas.toDataURL('image/jpeg', 0.6);
    passportPhotoDataInput.value = dataURL;
    capturedPhoto.src = dataURL;
    capturedPhotoPreview.style.display = 'block';
    closeCameraModalFunc();
    await estimateAge(dataURL);
  });

  retakeButton.addEventListener('click', function() {
    openCameraModalFunc();
    capturedPhotoPreview.style.display = 'none';
    photoMessage.style.display = 'none';
    estimatedAgeInput.value = '';
    submitButton.disabled = true;
    submitButton.style.backgroundColor = '#ccc';
    submitButton.style.cursor = 'not-allowed';
  });

  form.addEventListener('submit', function(e) {
    if (!/^\d{11}$/.test(bvnInput.value)) {
      e.preventDefault();
      bvnError.style.display = 'block';
      return;
    }
    if (!estimatedAgeInput.value) {
      e.preventDefault();
      photoMessage.style.display = 'block';
      photoMessage.style.color = 'red';
      photoMessage.textContent = 'Photo must be processed successfully.';
      return;
    }
    bvnError.style.display = 'none';
    submitButton.disabled = true;
    loadingMessage.style.display = 'block';
  });
</script>